* 개선사항
1. Trimming 
: sequencher랑 유사하게 하려고했으나 무언가 추가조건이 있는듯. 5'은 대부분 똑같이. 3'은 대부분 비슷하지만 일부에서 sequencher보다 조금 느슨하게.
처음 제가 쓰던 criteria보다 1.2.1에서는 약간 더 느슨하게 trimming되기 때문에
5', 3'쪽에서의 basecalling에러가 일부 포함되고 있다.

trimming을 약간 공격적으로 하고 하나의 균으로 동정이 안될때 edit trimming으로 범위를 넓혀보는 방법
trimming을 지금처럼 느슨하게 하고 5', 3' 말단에서 생길수 있는 basecalling 에러를 직접 수정하는 방법


보내주신 예시의 경우 167건 중에 
CGAACGG[]AA는 없지만 CGAACGG[T]AA 를 포함해서 다른 variation들이 있는 것 같아 모두 GG[A]AA로 바꾸기는 어려움
향후 Machine learning등 계획중이신 Basecalling을 향상시키는 연구를 통해 일반화 할수 있는 개선안이 유용할 것으로 생각됩니다. 



- 5', 3' 말단에서 fwd, rev중 한 쪽에만 trace가 존재하는곳의 화면 scroll -->처리.  
- generate TSV (CSV->TSV), 모든 case, 모든 region에 대해  

sequencher basecalling 다르다
double peak 


fwd, rev 서로 align 안될때. (둘 다 poor quality, trimming 너무많이 되어서 짧게 남았을때)
: 둘중에 긴걸로?
둘 다 보려면 별도로 프로그램을 하나 더 열어서 반대쪽도 evaluation  



*추가


* 나중에
- Progress bar
- 속도개선..

settings? : 바꾸고 나면 파일 새로 읽어야 함, Font 크기 바꾸면 makeHeader, fillResult 다시한 번 호출.



<SnackVar에도 반영할것>
//범위 벗어난 경우 shading 하지 않음
if(fwdChar == Formatter.gapChar) {
				if(tempFwdPos != 1 && tempFwdPos != sample.trimmedFwdTrace[context].getSequenceLength())	
					awtImage = sample.trimmedFwdTrace[context].getShadedImage(3,tempFwdPos-1,tempFwdPos-1, sample.formatter[context]);
				else	//범위 벗어난 경우 shading 하지 않음
					awtImage = sample.trimmedFwdTrace[context].getShadedImage(0,tempFwdPos-1,tempFwdPos-1, sample.formatter[context]);
			}
				else awtImage = sample.trimmedFwdTrace[context].getShadedImage(1, tempFwdPos-1, tempFwdPos-1, sample.formatter[context]);


끝에있는것도 반영

trimming 자동으로 일단 한후 (Hetero indel 있을때를위한 trimming 기준 새로 만들어야겠지)
edit trimming 버튼

adjustFwdRevPane

